package recipes

import (
	"careme/internal/history"
	"careme/internal/locations"
	"fmt"
	"html"
	"strings"
	"time"
)

// FormatRecipesHTML returns a very simple HTML page rendering the generated recipes.
func FormatRecipesHTML(location string, date time.Duration, recipes []history.Recipe) string {
	var b strings.Builder
	b.WriteString("<!DOCTYPE html><html><head><meta charset='utf-8'>")
	b.WriteString("<title>Careme Recipes</title>")
	b.WriteString(`<style>body{font-family:system-ui,-apple-system,sans-serif;margin:2rem;line-height:1.4;background:#fafafa;color:#222}header{margin-bottom:2rem}h1{margin:0 0 .25rem;font-size:1.8rem}form{margin:1rem 0;padding:.75rem;background:#fff;border:1px solid #ddd;border-radius:8px;display:flex;gap:.5rem}input[type=text]{flex:1;padding:.5rem .75rem;border:1px solid #bbb;border-radius:4px;font-size:1rem}button{background:#2563eb;color:#fff;border:0;padding:.55rem 1rem;border-radius:4px;cursor:pointer;font-size:1rem}button:hover{background:#1d4ed8}article{background:#fff;border:1px solid #e2e2e2;border-radius:10px;padding:1rem 1.25rem;margin-bottom:1.25rem;box-shadow:0 1px 2px rgba(0,0,0,.05)}h2{margin-top:0}ul{margin:.4rem 0 .8rem;padding-left:1.1rem}li{margin:.15rem 0}code.badge{background:#eef;padding:.25rem .5rem;border-radius:4px;font-size:.75rem;margin-left:.35rem}footer{margin-top:3rem;font-size:.75rem;color:#666}</style>`)
	b.WriteString("</head><body>")
	b.WriteString("<header><h1>Careme Weekly Recipes</h1><p>Generated for your location. Enter a location code to generate fresh ideas.</p></header>")
	b.WriteString("<form method='GET'><input type='text' name='location' placeholder='Enter location code' value='" + html.EscapeString(location) + "'><button type='submit'>Generate</button></form>")

	if len(recipes) > 0 {
		b.WriteString(fmt.Sprintf("<h2>Results for location %s</h2>", html.EscapeString(location)))
		for i, r := range recipes {
			b.WriteString("<article>")
			b.WriteString(fmt.Sprintf("<h2>%d. %s <code class='badge'>%s</code></h2>", i+1, html.EscapeString(r.Name), html.EscapeString(r.ID)))
			if r.Description != "" {
				b.WriteString("<p>" + html.EscapeString(r.Description) + "</p>")
			}
			if len(r.Ingredients) > 0 {
				b.WriteString("<h3>Ingredients</h3><ul>")
				for _, ing := range r.Ingredients {
					b.WriteString("<li>" + html.EscapeString(ing) + "</li>")
				}
				b.WriteString("</ul>")
			}
			if len(r.Instructions) > 0 {
				b.WriteString("<h3>Instructions</h3><ol>")
				for _, step := range r.Instructions {
					b.WriteString("<li>" + html.EscapeString(step) + "</li>")
				}
				b.WriteString("</ol>")
			}
			b.WriteString("</article>")
		}
	}

	b.WriteString("<footer>Generated by Careme.</footer></body></html>")
	return b.String()
}

// FormatChatHTML renders the raw AI chat (JSON or free-form text) for a location.
func FormatChatHTML(location locations.Location, date time.Time, chat string) string {
	var b strings.Builder
	b.WriteString("<!DOCTYPE html><html><head><meta charset='utf-8'><meta name='viewport' content='width=device-width, initial-scale=1'><title>Careme Chat Result</title>")
	b.WriteString(`<style>body{font-family:system-ui,-apple-system,sans-serif;margin:2rem;background:#f5f7fa;color:#222}pre{background:#111;color:#eee;padding:1rem;border-radius:8px;overflow-x:auto;white-space:pre-wrap;word-break:break-word;font-size:.9rem;line-height:1.3}form{margin-bottom:1.5rem;display:flex;gap:.5rem}input[type=text]{flex:1;padding:.6rem .8rem;border:1px solid #bbb;border-radius:4px;font-size:1rem}button{background:#2563eb;color:#fff;border:0;padding:.6rem 1rem;border-radius:4px;cursor:pointer;font-size:1rem}button:hover{background:#1d4ed8}h1{margin-top:0}footer{margin-top:2rem;font-size:.75rem;color:#666}@media (max-width:768px){body{margin:1rem}form{flex-direction:column;gap:.75rem}input[type=text]{flex:none;padding:.75rem .8rem;font-size:1.1rem;min-height:44px;box-sizing:border-box}button{padding:.75rem 1rem;font-size:1.1rem;min-height:44px;box-sizing:border-box}}</style>`)
	b.WriteString("</head><body>")
	b.WriteString("<h1>Careme Recipes</h1>")
	//b.WriteString("<form method='GET'><input type='text' name='location' placeholder='Enter location code' value='" + html.EscapeString(location) + "'><button type='submit'>Generate</button></form>")
	b.WriteString("<h2>Location: " + html.EscapeString(location.Name) + " (" + html.EscapeString(location.Address) + ")</h2>")
	b.WriteString(chat)
	// Form to submit additional instructions, preserving existing location and date query parameters
	b.WriteString("<form method='GET' style='margin:1rem 0;display:flex;gap:.5rem'>")
	b.WriteString("<input type='hidden' name='location' value='" + html.EscapeString(location.ID) + "'>")
	// assuming you pass `date` into this function (you'll need to update the signature to accept `date string`)
	b.WriteString("<input type='hidden' name='date' value='" + html.EscapeString(date.Format("2006-01-02")) + "'>")
	b.WriteString("<input type='text' name='instructions' placeholder='Enter extra instructions'>")
	b.WriteString("<button type='submit'>Apply Instructions</button>")
	b.WriteString("</form>")

	b.WriteString("<footer>Generated by Careme.</footer></body></html>")
	return b.String()
}
